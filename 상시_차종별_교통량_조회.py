# -*- coding: utf-8 -*-
"""상시 차종별 교통량 조회

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1nHA4xmdZGfxUW0Ej4k1sqMexandC3nMc

## 상시 차종별 교통량 조회

상시 수집된 교통 데이터 중 연도, 도로 종류를 통해 지정한 <br/>
연도에 선택된 도로(고속도로, 일반도로 등)를 통행한 차량 종류별 통행량을 <br/> 조회하는 기능

https://www.data.go.kr/iim/api/selectAPIAcountView.do
"""

! pip install xmltodict

"""### 오류가 왜 뜨는지 확인 코드"""

import json

def parse_re(input_re: str):
    try:
        return_dict = json.loads(input_re)
    except json.decoder.JSONDecodeError:
        return_dict = dict()
    finally:
        return return_dict

i = 0
url = 'http://apis.data.go.kr/1613000/KICTopenAPI/vt?serviceKey=LGp4ONLLefBCX516C1Cg%2B6LeQEDqU8iKsXZM9nxG0zPoZ61jkjo9tHIBdJXXoeEzPlJMEqi6SlIvRHYrNU12cA%3D%3D&year=2020&dtype=2&output=json&pageNo={}'.format(i) + '&month=1&numOfRows=500&type=json'

# url 불러오기
response = requests.get(url) # 신뢰할 수 없는 SSL 인증서로 인해 발생, verify=False 구문 추가

# 데이터 값 출력해보기
contents = response.text

# 문자열을 json으로 변경
#json_ob = json.loads(contents) ## dtype 2에서 여기서 에러뜸
print(parse_re(contents))

"""왜 {} 가 나오는지?"""

import pandas as pd
from pandas.io.json import json_normalize
import requests
import pprint
import json

# url 입력 (https 말고 http로 수정)

#dtype=1,month=1
#count=6174
#pageNo=13
#numOfRows=500

#dtype=1,month=2
#count=6148
#pageNo=13
#numOfRows=500

#dtype=1,month=3
#count=6790
#pageNo=14
#numOfRows=500

#dtype=1,month=4
#count=6908
#pageNo=14
#numOfRows=500

#dtype=1,month=5
#count=7148
#pageNo=15
#numOfRows=500

#dtype=1,month=6
#count=6994
#pageNo=14
#numOfRows=500

#dtype=1,month=7
#count=7166
#pageNo=15
#numOfRows=500

#dtype=1,month=8
#count=7022
#pageNo=15
#numOfRows=500

#dtype=1,month=9
#count=6446
#pageNo=13
#numOfRows=500

#dtype=1,month=10
#count=6562
#pageNo=14
#numOfRows=500

#dtype=1,month=11
#count=6234
#pageNo=13
#numOfRows=500

#dtype=1,month=12
#count=6598
#pageNo=14
#numOfRows=500

dataframe = pd.DataFrame(columns=['spot_id', 'month', 'day', 'direction', 'vehicle_type1', 'vehicle_type2',
       'vehicle_type3', 'vehicle_type4', 'vehicle_type5', 'vehicle_type6',
       'vehicle_type7', 'vehicle_type8', 'vehicle_type9', 'vehicle_type10',
       'vehicle_type11', 'vehicle_type12', 'total_count'])

# list = [0,1,2,3,4,5] 
## spothcv -> vt

for i in range(14):
  url = 'http://apis.data.go.kr/1613000/KICTopenAPI/vt?serviceKey=LGp4ONLLefBCX516C1Cg%2B6LeQEDqU8iKsXZM9nxG0zPoZ61jkjo9tHIBdJXXoeEzPlJMEqi6SlIvRHYrNU12cA%3D%3D&year=2020&dtype=1&output=json&pageNo={}'.format(i) + '&month=12&numOfRows=500&type=json'
  # url 불러오기
  response = requests.get(url) # 신뢰할 수 없는 SSL 인증서로 인해 발생, verify=False 구문 추가

  # 데이터 값 출력해보기
  contents = response.text

  # 문자열을 json으로 변경
  #json_ob = json.loads(contents) ## dtype 2에서 여기서 에러뜸
  json_ob = parse_re(contents)

  # 필요한 부분만 추출
  body = json_ob['traffic']

  # 데이터프레임으로 변환
  dataframe_i = json_normalize(body)

  # 데이터프레임 append
  dataframe = dataframe.append(dataframe_i)
  dataframe = dataframe.reset_index(drop=True)

dataframe

dataframe.to_csv('totalcount_vehicle_12.csv',index=False)

dataframe1 = pd.read_csv('totalcount_vehicle.csv')
dataframe2 = pd.read_csv('totalcount_vehicle_2.csv')
dataframe3 = pd.read_csv('totalcount_vehicle_3.csv')
dataframe4 = pd.read_csv('totalcount_vehicle_4.csv')
dataframe5 = pd.read_csv('totalcount_vehicle_5.csv')
dataframe6 = pd.read_csv('totalcount_vehicle_6.csv')
dataframe7 = pd.read_csv('totalcount_vehicle_7.csv')
dataframe8 = pd.read_csv('totalcount_vehicle_8.csv')
dataframe9 = pd.read_csv('totalcount_vehicle_9.csv')
dataframe10 = pd.read_csv('totalcount_vehicle_10.csv')
dataframe11 = pd.read_csv('totalcount_vehicle_11.csv')
dataframe12 = pd.read_csv('totalcount_vehicle_12.csv')

totalcount_vehicle2020 = pd.concat([dataframe1,dataframe2,dataframe3,dataframe5,
                                    dataframe6,dataframe7,dataframe8,dataframe9,dataframe10,dataframe11,dataframe12])
totalcount_vehicle2020 = totalcount_vehicle2020.reset_index(drop=True)
totalcount_vehicle2020 # 73282 * 17

"""#### 칼럼 추가"""

totalcount_vehicle2020['dtype'] = 1
totalcount_vehicle2020

totalcount_vehicle2020.to_csv('totalcount_vehicle2020.csv',index=False)

"""## 🤸‍♀️

## dtype = 2

counts 구해주고 countslist에 담기

3월만 <returnAuthMsg>LIMITED_NUMBER_OF_SERVICE_REQUESTS_EXCEEDS_ERROR</returnAuthMsg> 오류뜬다. 화나네 <br/>
서버 문제인둡 ㅡㅡ^
"""

import pandas as pd
from pandas.io.json import json_normalize
import requests
import pprint
import json

countslist = []

i = 1

for j in range(1,13): #month

  url = 'http://apis.data.go.kr/1613000/KICTopenAPI/vt?serviceKey=LGp4ONLLefBCX516C1Cg%2B6LeQEDqU8iKsXZM9nxG0zPoZ61jkjo9tHIBdJXXoeEzPlJMEqi6SlIvRHYrNU12cA%3D%3D&year=2020&dtype=2&output=json&pageNo={}'.format(i) + '&month={}'.format(j)+'&numOfRows=500&type=json'
  # url 불러오기
  response = requests.get(url) 

  # 데이터 값 출력해보기
  contents = response.text

  # 문자열을 json으로 변경
  #json_ob = json.loads(contents) 
  json_ob = parse_re(contents)

  # 필요한 부분만 추출
  counts = json_ob['count']
  print(counts)
  
  # countslist에 append
  countslist = countslist.append(counts)

countslist = [30218,27820,29050,27414,28330,27976,28306,27766,27380,29116,27846,28770]

"""## for 문 살짝 추가"""

import pandas as pd
from pandas.io.json import json_normalize
import requests
import pprint
import json

# url 입력 (https 말고 http로 수정)

#dtype=2,month=1
#count=OOOO
#pageNo=13
#numOfRows=500

#dtype=2,month=2
#count=OOOO
#pageNo=count/numOfRows
#numOfRows=500

dataframe = pd.DataFrame(columns=['spot_id', 'month', 'day', 'direction', 'vehicle_type1', 'vehicle_type2',
       'vehicle_type3', 'vehicle_type4', 'vehicle_type5', 'vehicle_type6',
       'vehicle_type7', 'vehicle_type8', 'vehicle_type9', 'vehicle_type10',
       'vehicle_type11', 'vehicle_type12', 'total_count'])

# list = [0,1,2,3,4,5] 
## spothcv -> vt
for j in range(1,13): #month
  count = countslist[j]
  pageNo = round(count/500)

  for i in range(pageNo):
    url = 'http://apis.data.go.kr/1613000/KICTopenAPI/vt?serviceKey=LGp4ONLLefBCX516C1Cg%2B6LeQEDqU8iKsXZM9nxG0zPoZ61jkjo9tHIBdJXXoeEzPlJMEqi6SlIvRHYrNU12cA%3D%3D&year=2020&dtype=2&output=json&pageNo={}'.format(i) + '&month={}'.format(j) + '&numOfRows=500&type=json'
    # url 불러오기
    response = requests.get(url) # 신뢰할 수 없는 SSL 인증서로 인해 발생, verify=False 구문 추가

    # 데이터 값 출력해보기
    contents = response.text

    # 문자열을 json으로 변경
    #json_ob = json.loads(contents) ## dtype 2에서 여기서 에러뜸
    json_ob = parse_re(contents)

    # 필요한 부분만 추출
    body = json_ob['traffic']

    # 데이터프레임으로 변환
    dataframe_i = json_normalize(body)

    # 데이터프레임 append
    dataframe = dataframe.append(dataframe_i) #month 1~12 다
    dataframe = dataframe.reset_index(drop=True)

    # csv 파일로 저장
    #dataframe.to_csv('totalcount_vehicle2020_dtype2.csv',index=False)

"""## 호호 오류 떠서 그냥 수동으로"""

import pandas as pd
from pandas.io.json import json_normalize
import requests
import pprint
import json

# url 입력 (https 말고 http로 수정)
# countslist = [30218,27820,29050,27414,28330,27976,28306,27766,27380,29116,27846,28770]

#dtype=2,month=1
#count=30218
#pageNo=61
#numOfRows=500

#dtype=2,month=2
#count=27820
#pageNo=56
#numOfRows=500

dataframe = pd.DataFrame(columns=['spot_id', 'month', 'day', 'direction', 'vehicle_type1', 'vehicle_type2',
       'vehicle_type3', 'vehicle_type4', 'vehicle_type5', 'vehicle_type6',
       'vehicle_type7', 'vehicle_type8', 'vehicle_type9', 'vehicle_type10',
       'vehicle_type11', 'vehicle_type12', 'total_count'])

# list = [0,1,2,3,4,5] 
## spothcv -> vt

for i in range(56):
  url = 'http://apis.data.go.kr/1613000/KICTopenAPI/vt?serviceKey=LGp4ONLLefBCX516C1Cg%2B6LeQEDqU8iKsXZM9nxG0zPoZ61jkjo9tHIBdJXXoeEzPlJMEqi6SlIvRHYrNU12cA%3D%3D&year=2020&dtype=2&output=json&pageNo={}'.format(i) + '&month=2&numOfRows=500&type=json'
  # url 불러오기
  response = requests.get(url) # 신뢰할 수 없는 SSL 인증서로 인해 발생, verify=False 구문 추가

  # 데이터 값 출력해보기
  contents = response.text

  # 문자열을 json으로 변경
  #json_ob = json.loads(contents) ## dtype 2에서 여기서 에러뜸
  json_ob = parse_re(contents)

  # 필요한 부분만 추출
  body = json_ob['traffic']

  # 데이터프레임으로 변환
  dataframe_i = json_normalize(body)

  # 데이터프레임 append
  dataframe = dataframe.append(dataframe_i)
  dataframe = dataframe.reset_index(drop=True)